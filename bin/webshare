#!/usr/bin/env python

import BaseHTTPServer, SocketServer
from SimpleHTTPServer import SimpleHTTPRequestHandler
import socket
import fcntl
import struct
import sys

class HTTPServer(SocketServer.ThreadingMixIn, BaseHTTPServer.HTTPServer):
    def __init__(self, server_address, RequestHandlerClass=None):
        BaseHTTPServer.HTTPServer.__init__(self, server_address, RequestHandlerClass)

def get_ip_address(ifname):
	s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
	return socket.inet_ntoa(fcntl.ioctl(
		s.fileno(),
		0x8915,  # SIOCGIFADDR
		struct.pack('256s', ifname[:15])
		)[20:24])

ifname = 'eth0'
#ip = get_ip_address(ifname)
ip = '0.0.0.0'



if sys.argv[1:]:
	port = int(sys.argv[1])
else:
	port = 8000
server_address = (ip,port)

HTTPServer.protocol_version = 'HTTP/1.0'
httpd = HTTPServer(server_address, SimpleHTTPRequestHandler)

sa = httpd.socket.getsockname()
print "Serving HTTP on", sa[0], "port", sa[1], "..."
httpd.serve_forever()

